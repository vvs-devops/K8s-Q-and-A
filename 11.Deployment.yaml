Deplyment: 
  Kubernets, Deployment is the recommended way to deploy POD or RS simply because of the advance feature it comes with.
  Below are some of the key benifits.
   - Deploy a RS
   - Updates Pods
   - Rolback to older Deployment version
   - sclae deployment up or down
   - pause and resume the deployment
   - use the status of the Deployment to determine state of replicas.
   - Clean up older RS that you don't need anymore.			
   
   Deployment Stratagies: 
    1) Rolling Update
    2) Recreate
---
Recreate:
Syntax:

apiVersion: apps/v1
kind: Deployment
metadata:
  name: <DeploymentName>
  namespace: <DeploymentName>
  labels:
    <key>: <value>	
spec:
  replicas: <noOFReplicals>
  selector:
    matchLabels:
    <key>: <value>
  template:
    metadata:
    name: <POdName>
    labels:
    <key>: <value>
  spec:
    containers:
    - name: <containerName>
      image: <image>
      ports:
      - containerPort: <containerPort>		

Exapmple:
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mavenwebappdeployment
spec:
  replicas: 2
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: mavenwebapp
  template:
    metadata:
      name: mavenwebapppod
      labels:
        app: mavenwebapp
    spec:
      containers:
      - name: mavenwebapp
        image: vaddevenkat/maven-web-application:1
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: mavenwebappsrc
spec:
  type: NodePort
  selector:
    app: mavenwebapp
  ports:
   - port: 80
     targetPort: 8080	

Rolling Update:
---
Exapmple:

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mavenwebdeplyment
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    RollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
    minReadySeconds: 30
  selector:
    matchLabels:
    app: mavenwebapp
  template:
    metadata:
    name: mavenwebapp	
    labels:
    app: mavenwebapp
  spec:
  containers:
  - name: mavenwebapp
  image: vaddevenkat/maven-web-application:1
  ports:
  - containerPort: 8080	    			
---
apiVersion: v1
kind: Service
metadata:
  name: mavenwebappsvc
spec:
  type: NodePort
  selector:
    app: mavenwebapp 
  ports:
   - port: 80
     targetPort: 8080		
---    
kubectl get all
keubectl get deployment -A
keubectl get deployment 
kubectl apply -f mavenwebapp_rollingupdate.yaml
keubectl get deployment 
kubectl get all
kubectl rollout status deployment mavenweappdeployment
kubectl rollout history deployment mavenweappdeployment
kubectl rollout history deployment mavenweappdeployment --revision 1

watch kubectl get pods					watch kubectl get ep

kubectl rollout history deployment mavenweappdeployment
kubectl rollout undo deployment mavenweappdeployment --to--revision 1